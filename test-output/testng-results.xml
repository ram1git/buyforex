<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="111428" started-at="2018-11-09T07:44:00Z" finished-at="2018-11-09T07:45:51Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="111428" started-at="2018-11-09T07:44:00Z" finished-at="2018-11-09T07:45:51Z">
      <class name="tests.Test1">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:tests.Test1@44f75083]" name="beforetest" is-config="true" duration-ms="70921" started-at="2018-11-09T13:14:00Z" finished-at="2018-11-09T13:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Test1@44f75083]" name="beforeMethod" is-config="true" duration-ms="99" started-at="2018-11-09T13:15:11Z" finished-at="2018-11-09T13:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Test1.test1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test1()[pri:0, instance:tests.Test1@44f75083]" name="test1" duration-ms="117" started-at="2018-11-09T13:15:11Z" finished-at="2018-11-09T13:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.Test1@44f75083]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-11-09T13:15:11Z" finished-at="2018-11-09T13:15:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=Test1.test1()[pri:0, instance:tests.Test1@44f75083] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="test2(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.Test1@44f75083]" name="test2" duration-ms="7678" started-at="2018-11-09T13:15:22Z" data-provider="dp" finished-at="2018-11-09T13:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[manishlal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Rupali@07]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Test1@44f75083]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-09T13:15:22Z" finished-at="2018-11-09T13:15:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Test1.test2(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.Test1@44f75083]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-09T13:15:30Z" finished-at="2018-11-09T13:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=SUCCESS method=Test1.test2(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.Test1@44f75083] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Test1@44f75083]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-11-09T13:15:30Z" finished-at="2018-11-09T13:15:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Test1.test3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test3()[pri:0, instance:tests.Test1@44f75083]" name="test3" duration-ms="1398" started-at="2018-11-09T13:15:30Z" depends-on-methods="tests.Test1.test2" finished-at="2018-11-09T13:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.Test1@44f75083]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-09T13:15:31Z" finished-at="2018-11-09T13:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test3 status=SUCCESS method=Test1.test3()[pri:0, instance:tests.Test1@44f75083] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Test1@44f75083]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-11-09T13:15:31Z" finished-at="2018-11-09T13:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Test1.test4() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test4()[pri:0, instance:tests.Test1@44f75083]" name="test4" duration-ms="15724" started-at="2018-11-09T13:15:31Z" depends-on-methods="tests.Test1.test3" finished-at="2018-11-09T13:15:47Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at java.util.LinkedHashMap$LinkedHashIterator.nextNode(Unknown Source)
	at java.util.LinkedHashMap$LinkedKeyIterator.next(Unknown Source)
	at tests.Test1.test4(Test1.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="FAIL" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.Test1@44f75083]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-11-09T13:15:47Z" finished-at="2018-11-09T13:15:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test4 status=FAILURE method=Test1.test4()[pri:0, instance:tests.Test1@44f75083] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at testbase.Base1.captureScreen(Base1.java:170)
	at testbase.Base1.getresult(Base1.java:131)
	at testbase.Base1.afterMethod(Base1.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:786)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:tests.Test1@44f75083]" name="endTest" is-config="true" duration-ms="4003" started-at="2018-11-09T13:15:47Z" finished-at="2018-11-09T13:15:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- tests.Test1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
